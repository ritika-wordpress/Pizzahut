/*Retrieve the total number of orders placed*/
use pizzahut;
select count(order_id) from orders;

/*Calculate the total revenue generated from pizza sales.*/
select round(sum(order_details.quantity*pizzas.price),2) as total from order_details
join pizzas 
where (pizzas.pizza_id= order_details.pizza_id);


/*Identify the highest-priced pizza.*/
use pizzahut;
SELECT 
    pizza_types.name, price
FROM
    pizzas
        JOIN
    pizza_types
WHERE
    pizza_types.pizza_type_id = pizzas.pizza_type_id
ORDER BY price DESC
LIMIT 1;

/*List the top 5 most ordered pizza types along with their quantities.
*/
SELECT 
    pizzas.pizza_type_id, COUNT(quantity)
FROM
    order_details
        JOIN
    pizzas
WHERE
    pizzas.pizza_id = order_details.pizza_id
GROUP BY pizza_type_id
ORDER BY pizza_type_id DESC
LIMIT 5;

-- Determine the top 3 most ordered pizza types based on revenue.

SELECT 
    pizzas.pizza_type_id, round(SUM(quantity*pizzas.price),2) as revenue
FROM
    pizza_types
        JOIN
    pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
        JOIN
    order_details ON order_details.pizza_id = pizzas.pizza_id
    group by pizzas.pizza_type_id
    order by revenue desc
    limit 3;
    
   -- Group the orders by date and calculate the average number of pizzas ordered per day.
select round(avg(quant),2) from
(
SELECT 
    order_date,sum(quantity) as quant
FROM
    orders
        JOIN
    order_details
WHERE
    order_details.order_id = orders.order_id
    group by order_date) as order_quantity;

 /*Join relevant tables to find the category-wise distribution of pizzas.*/

SELECT 
    category, count(name)
FROM
    pizza_types
    group by category;
    
    /*Determine the distribution of orders by hour of the day.*/

select hour(order_time), count(order_id) from orders
group by hour(order_time)
order by hour(order_time) asc;

/*Join the necessary tables to find the total quantity of each pizza category ordered.*/

select pizza_types.category, count(quantity )
from order_details join pizzas on order_details.pizza_id= pizzas.pizza_id
join pizza_types on pizzas.pizza_type_id=pizza_types.pizza_type_id
group by category
;

-- Determine the top 3 most ordered pizza types based on revenue for each pizza category.
select category, name, revenue from
(select category, name, revenue,rank() over(partition by category order by revenue desc)as rn from 
(select pizza_types.category, pizza_types.name, sum(order_details.quantity*pizzas.price) as revenue
from pizzas join pizza_types on
pizzas.pizza_type_id= pizza_types.pizza_type_id
join order_details on
order_details.pizza_id= pizzas.pizza_id
group by pizza_types.category, pizza_types.name) as a) as b
where rn<=3 ;

-- Analyze the cumulative revenue generated over time.
-- revenue day1
-- revenue day2= day2+day1
select order_date, sum(revenue) over(order by order_date ) as cum_revenue 
from 
(select orders.order_date, round(sum(order_details.quantity*pizzas.price),2) as revenue
from order_details join pizzas
on 
order_details.pizza_id=pizzas.pizza_id
join
orders
on 
order_details.order_id= orders.order_id
group by order_date) as t1;

-- Calculate the percentage contribution of each pizza type to total revenue.
    select pizza_types.category, round(sum(order_details.quantity*pizzas.price)/(select round(sum(order_details.quantity*pizzas.price),2) 
    as total_sales from order_details join pizzas 
    on
    order_details.pizza_id= pizzas.pizza_id)*100,2) as revenue
    
    from
    pizza_types join pizzas
    on 
    pizzas.pizza_type_id= pizza_types.pizza_type_id
    join order_details
    on 
    order_details.pizza_id= pizzas.pizza_id
group by category;
